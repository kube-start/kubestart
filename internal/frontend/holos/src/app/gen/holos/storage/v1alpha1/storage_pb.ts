// @generated by protoc-gen-es v1.9.0 with parameter "target=ts"
// @generated from file holos/storage/v1alpha1/storage.proto (package holos.storage.v1alpha1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Struct } from "@bufbuild/protobuf";

/**
 * Model represents user-defined and user-supplied form field values stored as a
 * marshaled JSON object.  The model is a Struct to ensure any valid JSON object
 * defined by the user via the form can be represented and stored.
 *
 * @generated from message holos.storage.v1alpha1.Model
 */
export class Model extends Message<Model> {
  /**
   * @generated from field: google.protobuf.Struct model = 1;
   */
  model?: Struct;

  constructor(data?: PartialMessage<Model>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "holos.storage.v1alpha1.Model";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "model", kind: "message", T: Struct },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Model {
    return new Model().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Model {
    return new Model().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Model {
    return new Model().fromJsonString(jsonString, options);
  }

  static equals(a: Model | PlainMessage<Model> | undefined, b: Model | PlainMessage<Model> | undefined): boolean {
    return proto3.util.equals(Model, a, b);
  }
}

/**
 * Form represents the Formly input form stored as a marshaled JSON object.
 *
 * @generated from message holos.storage.v1alpha1.Form
 */
export class Form extends Message<Form> {
  /**
   * fields represents FormlyFieldConfig[] encoded as an array of JSON objects
   * organized by section.
   *
   * @generated from field: repeated google.protobuf.Struct field_configs = 1;
   */
  fieldConfigs: Struct[] = [];

  constructor(data?: PartialMessage<Form>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "holos.storage.v1alpha1.Form";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "field_configs", kind: "message", T: Struct, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Form {
    return new Form().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Form {
    return new Form().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Form {
    return new Form().fromJsonString(jsonString, options);
  }

  static equals(a: Form | PlainMessage<Form> | undefined, b: Form | PlainMessage<Form> | undefined): boolean {
    return proto3.util.equals(Form, a, b);
  }
}

